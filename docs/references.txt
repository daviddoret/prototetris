


All you need to know about 3D file formats: 8 Most Common 3D File Formats of 2018
Dibya Chakravorty, Jun 22, 2018
https://all3dp.com/3d-file-format-3d-files-3d-printer-3d-cad-vrml-stl-obj/


How to write python classes
https://docs.python.org/3/tutorial/classes.html

Python code style guidelines
https://www.python.org/dev/peps/pep-0008/

Please install Anaconda
https://www.anaconda.com/download/

it includes SimPy
https://docs.sympy.org/latest/index.html

and SimPy has nice geometric class such as Polygon
https://docs.sympy.org/latest/modules/geometry/polygons.html#sympy.geometry.polygon.Polygon

ooops, Anaconda can't be used directly because Rhino requires IronPython.
So first, install IronPython and use it as the interpreter
we will then need to install all Anaconda desired libraries on top of that
http://ironpython.net/

ooops, this will downgrade us to 2.7

ooops, this will force us to move to visual studio


CURRENTLY INSTALLING VISUAL STUDIO

THen, in VSS market place we have Rhino components
https://marketplace.visualstudio.com/items?itemName=McNeel.RhinoCommontemplatesforv6
https://marketplace.visualstudio.com/items?itemName=McNeel.GrasshopperAssemblyforv6

ALTERNATIVE SOLUTION TO RHINO (and open source)
https://www.blender.org/thanks/
WITH PYTHON API:
https://docs.blender.org/api/current/
Advantage: uses Python 3

how to autocomplete blender from pycharm
https://blender.community/c/today/Gfcbbc/


WISH

implement a clean math model in Python, without too strong dependency on Rhino and/or Blender
this will help us yield all benefits from Anaconda etc
then ensure we can easily export the result for visualization
ideally become 3d format agnostic

CONSIDER

http://www.open3d.org/


PYCOLLADA

a possible option to export results in 3d format
https://media.readthedocs.org/pdf/pycollada/latest/pycollada.pdf

SOME SCIENTIFIC PYTHON LIB BINARIES, INCL. CGKIT AND POLYGON

https://www.lfd.uci.edu/~gohlke/pythonlibs/#polygon


https://pypi.org/search/?q=&o=-created&c=Topic+%3A%3A+Multimedia+%3A%3A+Graphics+%3A%3A+3D+Modeling


________________________


GTS LIBRARY

http://gts.sourceforge.net/

GTS stands for the GNU Triangulated Surface Library. It is an Open Source Free Software Library intended to provide a set of useful functions to deal with 3D surfaces meshed with interconnected triangles. The source code is available free of charge under the Free Software LGPL license.
The code is written entirely in C with an object-oriented approach based mostly on the design of GTK+. Careful attention is paid to performance related issues as the initial goal of GTS is to provide a simple and efficient library to scientists dealing with 3D computational surface meshes.
A brief summary of its main features:
Simple object-oriented structure giving easy access to topological properties.
2D dynamic Delaunay and constrained Delaunay triangulations.
Robust geometric predicates (orientation, in circle) using fast adaptive floating point arithmetic (adapted from the fine work of Jonathan R. Shewchuk).
Robust set operations on surfaces (union, intersection, difference).
Surface refinement and coarsening (multiresolution models).
Dynamic view-independent continuous level-of-detail.
Preliminary support for view-dependent level-of-detail.
Bounding-boxes trees and Kd-trees for efficient point location and collision/intersection detection.
Graph operations: traversal, graph partitioning.
Metric operations (area, volume, curvature ...).
Triangle strips generation for fast rendering.
The screenshots will give you an idea of what GTS can do. You can read the reference manual for more information.
Help would be very appreciated and you are very welcome to contribute.
_________________________

MESHPY

https://mathema.tician.de/software/meshpy/

Install procedure:
1: Download WHL from: https://www.lfd.uci.edu/~gohlke/pythonlibs/#meshpy
2: In PyCharm, activate venv with path_to_venv\Scripts\activate
3: PIP INSTALL %PATH%.whl
4: In Settings .... install package that now appears in the list
5: In Settings .... install package PyVTK (dependency)


________________________

Panda 3d
Important links:
    http://www.panda3d.org/manual/index.php/Features
    Doc: http://www.panda3d.org/reference/python
    Manual http://www.panda3d.org/manual/index.php/Scene_Graph_Manipulations
Model formats:
    egg
    bam

Question: how to programmatically generate egg or bam?

____________________________

TANGIBLE

https://pypi.org/project/tangible/

Tangible is a Python library to convert data into tangible 3D models.


_______________________________

PYFORMEX

https://pypi.org/project/pyformex/
http://www.nongnu.org/pyformex/
Development: http://savannah.nongnu.org/projects/pyformex/

_________________________________

PY3D (Open 3D)

Doc: http://www.open3d.org/docs/

_______________________________

PYGTS

Status: ABANDONED
Last update: 2015
https://sourceforge.net/projects/pygts/files/pygts/0.3.1/pygts-0.3.1.tar.gz/download


